name: Post to Blogger

on:
  workflow_dispatch:  # Allows manual triggering from the GitHub UI for testing
  schedule:
    - cron: '0 */4 * * *'  # Runs every 4 hours to avoid overlap with rate-limited posts (50 posts/hour)

jobs:
  post:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Prevents job from hanging (e.g., network issues or infinite loops)
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Checks out the repository code (latest version for reliability)
        # Ensure post.js, package.json, package-lock.json, and posts.json are in the repository

      - name: Setup Node.js
        uses: actions/setup-node@v4  # Sets up Node.js environment
        with:
          node-version: '18'  # Uses Node.js 18 (LTS, compatible with dependencies)
          cache: 'npm'  # Caches node_modules using package-lock.json to speed up installs
          # Requires package-lock.json; resolves previous "lock file not found" error

      - name: Install dependencies
        run: npm ci  # Installs dependencies from package-lock.json for consistency
        # If this fails, check package.json and package-lock.json for errors or version mismatches

      - name: Run Blogger Post Script
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}  # Google API client ID
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}  # Google API client secret
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}  # Google API refresh token
          BLOG_ID: ${{ secrets.BLOG_ID }}  # Blogger blog ID
          ULTRAMSG_INSTANCE: ${{ secrets.ULTRAMSG_INSTANCE }}  # UltraMsg API instance
          ULTRAMSG_TOKEN: ${{ secrets.ULTRAMSG_TOKEN }}  # UltraMsg API token
          WA_PHONE: ${{ secrets.WA_PHONE }}  # WhatsApp phone number for notifications
        run: node post.js > post.log 2>&1  # Redirects stdout and stderr to post.log for debugging
        # If this step fails (exit code 1), check post.log in the uploaded artifacts

      - name: Upload logs on failure
        if: failure()  # Runs only if any step fails
        uses: actions/upload-artifact@v4  # Uploads logs for debugging
        with:
          name: logs  # Artifact name
          path: |  # Files to upload
            *.json
            *.log
          # Includes progress.json, failed_posts.json, and post.log for error analysis
